services:
  service:
    container_name: service
    image: go-automate-test:latest
    build:
      context: .
      dockerfile: Dockerfile
    profiles:
      - service
      - integration-tests
    ports:
      - 80:80
    environment:
      DB_URL: database-mysql
    command: ["./main", "service"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health/check"]
      interval: 5m
      timeout: 5s
      retries: 3
      start_period: 15s
      start_interval: 5s
    depends_on:
      migration:
        condition: service_healthy

  migration:
    container_name: migration
    image: go-automate-test:latest
    build:
      context: .
      dockerfile: Dockerfile
    profiles:
      - migration
      - integration-tests
    command: sleep infinity
    environment:
      DB_URL: database-mysql
    healthcheck:
      test: ./main migration
      interval: 5m
      timeout: 5s
      retries: 3
      start_period: 5s
      start_interval: 5s
    depends_on:
      database-mysql:
        condition: service_healthy

  database-mysql:
    container_name: database-mysql
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password
    profiles:
      - dependencies
      - integration-tests
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: automate-test
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: mysql --user=root --password=root --execute='show databases'
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
      start_interval: 5s

  redis:
    container_name: redis
    image: redis:7.0
    platform: linux/amd64
    profiles:
      - dependencies
      - integration-tests
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
      start_interval: 5s

  integration-tests:
    container_name: integration-tests
    image: golang:1.21-alpine
    profiles:
      - integration-tests
    environment:
      BASE_URL: http://service
    volumes:
      - ./:/go/src
    command: sh -c "cd /go/src && \
      go test tests/create_users_test.go -v && \
      go test tests/get_users_test.go -v"
    depends_on:
      service:
        condition: service_healthy
